
������������ �������̲� � ���˲������ ��� �������������
������ ����i�����: ��������� �.�., ������� �.�. ³�������� ������������ ��������� �����������
��������: � ������ ����� ���� ���������� ������������ ��������� � ��������� ��� �������������. ������ �����: ���������, ����������, ������� �����, �������� �����, ����� ���������, ��������������� �����, ���������������� �����, ������� ��������.
������
�� ��� ������ ����'������� ���� �������� ��������, �� ��������� �� ��������� ����� (������� �� ���������) ������� ��� �������� ���������� �������, ������ ����, ���� ������� ����� ����� ���������. ���������, ����������: ������ � �������� �������� �� ������� ��� ������ ����������, � ��������� � �� ����������� ��� ��������. ���-������� ����������� ��������� ����������� ������ �� �� �������� ���� �� ���� � ��������� ������, ����� � ��������� ����������� ���� � �������� ��'���� �� ������������� � ����������.
��������� � �� ������������ ����� ���������� ��, �� ���������� �� �������� ���������� ������ �� ������� �������� � �� �������� ��� �������� ��������� ������� ��������� ��� �������� ������ �����, �� ���������� ��������� ���� ����-����� ����������, �������� ���������� [1].
����� ������ � ��������� ������� ���������� ��������� � ��������� ��� �������������.
�� ��������� �� ��������� ����� ��� ����� ���������� � ��������� ���������� ��� �������������. ������ ����� �� ���� ������ �������� ���������� �����, � ��� ������������� ���-���������, ����� �� ������� �����, �� ���� ����������.
��� ��������� ������ ������� ������� �� ������, �� �� ������� �������, �� ���������� ���������. �������������� ������ ����������� ��������, �� ���������, �� ���� ������ � ���� ���� ������ �����, ���� ���� � ���������� ��������. ���� ��������, �� ���������� �������� ���������, �� ����� ���������� ������ ������, ���������� ������ ���� � �����, ��� ��������� ���� ������� ��������.
� ������������� ���������� �������� � �� ��������, �� �������� � ��� ���������� ���� ���� �������������. ���� ���� �������� �������� ������� � ������������ ����, ����� ����� �� ���� �������� ��� �������� ����������� ���� ������������� ���������� ����������, �� ������������ ���. ��������� ����������� ������� ��������� � ���� ���������� ��������� ����� ��������� ���������������� ����������� ��:
��������� (��� �� ��������� ����������); 
��������� ����� (���������, ������, ������, ���-�������); 
������� � ��������� ���������� (��������-���������, �������� ������� �� ��.). 
����� � �������� ��, ��� ���������� � �����-��������. ���������� ���� ��������� ������ ��������� ������ [2] �� Java.
˳������ ��� ���������� ����� � ����������� �������� ������. ³� ���� ��������������� ����� ���� ��������������. �� ���, �� ����� ������� ��������, � �� ����������� ����� ���������� [3]. � �������� ������ ���� ��������� �� ����� ��������� �����. �������� ���� ������� � ������� �������� �����, ���� �� ������� ���� ���������. ��� ����������� �������� ����������� ���� ������� � �������� �����. ���� ������� �� ���������, ��������� -1. ˳������ ����� ����� ��������������� ��� ������, ����������� ������ �����, ���� �� ���������� � �������.
���������:
public static int linearSearch(int arr[], int elementToSearch) {
for (int index = 0; index < arr.length; index++) {
if (arr[index] == elementToSearch)
return index;
}
return -1;
}
�������� ��� ������������ ����� ����� ��������������� ����� ������� ��� ������. ��� ��� ������ ������ ������������ ���������� ������ �����. �������� ����� ������ �������� �� ���� ��������, � � ������ ��������� ������� �������� ������� � ��������� � ��������. ����� ���������� ��� ����������� ��������. ������ ���������� ������ �������, ��������� � ��������� ��������� ����� ������. ֳ������ ������� ����������� �� ��������. ��� ���� ������� ���� ����������� �������� ��� ������������ ��������� ������ [4]. ����� ����������, ���� firstIndex(��������) ������ lastIndex(���������� ��������). ���� ���������� ���� ����� Java �� ���� �������� ��������.
���������:
public static int binarySearch(int arr[], int elementToSearch) {
int firstIndex = 0;
int lastIndex = arr.length - 1;
// ����� ����������(������� �� ������������)
while(firstIndex <= lastIndex) {
int middleIndex = (firstIndex + lastIndex) / 2;
// ���� �������� ������� � �������� �������, ��������� ���� ������
if (arr[middleIndex] == elementToSearch) {
return middleIndex;
}
// ���� �������� ������� �����
// ����������� ������ � middle+1, ��������� ����� ������� �
�������������
else if (arr[middleIndex] < elementToSearch)
firstIndex = middleIndex + 1;
// ���� �������� ������� �����
// ����������� ������ � middle-1, ��������� ����� ������� �
�������������
else if (arr[middleIndex] > elementToSearch)
lastIndex = middleIndex - 1;
}
return -1;
}
����� ���������, ��� �������� �� ��������� ������ ����������� ����� �������� ������. ����� ����� ������ ����������� ��������. ��������� ������ �� �������� sqrt (arraylength), ��������� �������� �������, ��� �������� ������� ��� ���� ������. ��� ������� ������� ���������� ���������� ����. ������� ������������, ���� ��������� ������� ����� ��������. ���� ��������� ������� ����� �� ���������� � �������� �������. �� ������ ���� ������ �� ������ ������� ����� ����������� �������� [5].
���������:
public static int jumpSearch(int[] integers, int elementToSearch) {
int arrayLength = integers.length;
int jumpStep = (int) Math.sqrt(integers.length);
int previousStep = 0;
while (integers[Math.min(jumpStep, arrayLength) - 1] < elementToSearch) {
previousStep = jumpStep;
jumpStep += (int)(Math.sqrt(arrayLength));
if (previousStep >= arrayLength;
return -1;
}
while (integers[previousStep] < elementToSearch) {
previousStep++;
if (previousStep == Math.min(jumpStep, arrayLength));
return -1;
}
if (integers[previousStep] == elementToSearch)
return previousStep;
return -1;
}
��������������� ����� ��������������� ��� ������ �������� � ������������� �����. ³� �������� ��� �������� ����������� � �������� �����. ��� �������� ����������� ����� ��������������� �������� ����������� �������. ��� � ������������ ����� ��������� �� �������� ������, �� ������� ������ ������� � �������� ������. ��� ������ �������� � ����� �������� ����������� ������� ������������. �������������� ������������� �� ������� ��� ������� ������. � ������ ������� �������� ������ �� ������� �����.
���������:
public static int interpolationSearch(int[] integers, int elementToSearch) {
int startIndex = 0;
int lastIndex = (integers.length - 1);
while ((startIndex <= lastIndex) && (elementToSearch >=
integers[startIndex]) &&
(elementToSearch <= integers[lastIndex])) {
122                                                                                                                                                        // ������������� ������� ������������ ��� ������ ������� �����
������� ��� ������� ��������
int pos = startIndex + (((lastIndex-startIndex) /
(integers[lastIndex]-integers[startIndex]))*
(elementToSearch - integers[startIndex]));
if (integers[pos] == elementToSearch)
return pos;
if (integers[pos] < elementToSearch)
startIndex = pos + 1;
else
lastIndex = pos - 1;
}
return -1;
}
���������������� ����� ��������������� ��� ������ �������� ������ �������� � ��������������� �������, ����� � ����� ������. � ����� ������ ������� ������ �������� ������ ������� � ������������� �� ����� �������� �������� ��� ������ ��������. ��� ������ ��������� �������� ������� ���� �����������. ���������������� ����� ��������������� � �������� ��������, ���� ������� ����� ���������. ����� ����� ������� ���� �� ���� �������� ��� ������ ������.
���������:
public static int exponentialSearch(int[] integers, int elementToSearch) {
if (integers[0] == elementToSearch)
return 0;
if (integers[integers.length - 1] == elementToSearch)
return integers.length;
int range = 1;
while (range < integers.length && integers[range] <= elementToSearch) {
range = range * 2;
}
return Arrays.binarySearch(integers, range / 2, Math.min(range, integers.length),
elementToSearch);
}
�����, � ���� ��������� ������ ��������� �������� ������� ����. ���� ����� ��� �������� �� ���������, �������� �������� ������, ����� ������ ������������ �����, �� ����� ������� �� ��������� ����� ��������� [6]. ����� �� ������ ����� ������� ��������� ������������ �������� ��������� ��� ����������� ������� �������� �������� �������.
������� �������� � ����� ����'������ ������������� �����, ���������� �� ����, �� ������ ��������� ������ ����� ������� �� ����������� �����, �� ������� � ���� ���������� ������ ������. г�����, �������� �� ������� �����, �� ���� ����������� ����� �� ��������� ����� �� ������� ���������� ��� ���������� ���������� ��� ��������� �����.
� �������� �������� ������ �������� ����, ���� ������� ��������� � ����� ������ - ����� ������������ �������� ����������� ���� � ��䳿, �� �� ������� �� ������������ ������ ��������� ������. ������ ��������� �� ������ ��������� �� ������������ ������, ��� � �������� ��������� ���� ����� �������� ���������. ��� �������� ����䳺 ���������� ���������� �� ����� �������� ��� �������� ����� �����. ��������� ������ ���������� ������� ����� � ��������� ��������� ������������ ������ ������㳿 [7].
������ ����, �� ������ ������� ������� �� ��������� �������� ���������:
������ ����� ������� �� ��������; 
��������, �� ������������� � ������, ����� ������� ��� ���� �� ��������; 
���� ����������� ����� ��� ���� ������� ���� ���������� ������ ��� �񳺿 ������. 
���������� ������� ������� ��������, �� ����������� ������� ����������:
���������, ���������� �������� ������� 98 ������ �������� �������� 1, 2, 5, 10 � 25 ������ ���, ��� �������� ������� ����� ���� ���������.
г�����: ������� �������� � ����� ������� ������ � ����, ��� �� ������� ����� �������� ������ ��������������� ������ ������������� �������, � ���, ��� �� ���� ������� ����� (���������� ���������� �������). ��� ������� ��������� ��� ������ �� 25 ������ (4 ������ ����� ����� ����, ��� �������). ���������� ��������� 98 � 25*3 = 23 ������.
�� ���������� ����� ������� ������ ������ �������� �� �������� ������, ����� ����� ������ ����� ����, � �� ������ �� 10 ������. ��� �������� ����� � �� �� ����� ����� �������� 1 � 2 ������, ��� ����� ���������� ��������� ��� ���� 7 ��������.
��������. ����� ������� ������ ���� �������� � �����. ��������� �������� �������� ������, �� ������� �� ��������� ����� ����������� ���� � ������������� �������. ���������, ���������� ��� �������� ������� ����������, �������� ������� ����� ������������ �����, �� ������� � ���� �������� ����� ������� ������. ���������� ���������� ������, ��������� ���������� ���������� �������������, � �������� ������� ���������� ������ ��������� � ������� �� ��������; ������ �������, ��� ��� ������� ����� �������� ���� ����� � ��������� ���������.
���� ������� �������� ���������� - ���������� � ��������� ��������, �� ��� - �� ������ ���� ���������� ���������� ����. ����� ��������� ��������, �� ����� �������, ��� ���������� ��� ��������� ����� �������� ��� ����������, �� ��������������� ��������. ���� ���� ����� ��� �������� ������ ���������, ��� ���� ����� ���������� ������ ����� ������. ���� ����� ���� �������� ����� ������ �� �����, ��� ��� ����� ������� ������� ���������������� ��������.
˳��������
1. ³����� GPGPU [����������� ������]. ����� ������� �� �������: https://uk.wikipedia.org/wiki/GPGPU � ����� � ������. ����� ������������ ������� ���������. Tproger [����������� ������] � ����� ������� �� �������: https://tproger.ru/articles/why-learn-algorithms/ 
2. ��������� ������. UA5.ORG [����������� ������] � ����� ������� �� �������: https://www.ua5.org/osnprog/418-algoritmi-poshuku.html 
3. ����� �� ������������ ��������� � ��������� ������. Dou [����������� ������] � ����� ������� �� �������: https://dou.ua/lenta/articles/algorithms-and-structures/ 
4. ��� ��������� ��� ��������. Proglib [����������� ������] � ����� ������� �� �������: https://proglib.io/p/what-is-an-algorithm/ 
5. ��������� � ��������� �����. Distance Learning [����������� ������] ����� ������� �� �������: https://dl.sumdu.edu.ua/textbooks/95351/522217/index.html 
6. ��������� � ��������� ������ � Java. Proselyte [����������� ������] � ����� ������� �� �������: https://proselyte.net/algorithms-and-data- structures-in-java/ 
7. ������ ���������. Distance learning [����������� ������] � ����� ������� �� �������: https://dl.sumdu.edu.ua/textbooks/95351/522264/index.html 

